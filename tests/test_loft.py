from __future__ import annotations

from itertools import chain

import pytest
from maya import cmds  # type: ignore

from maya_zen_tools._traverse import (
    get_polymesh_shape_changed_uvs_positions,
    get_polymesh_shape_changed_vertices_positions,
    get_polymesh_shape_uvs_positions,
    get_polymesh_shape_vertices_positions,
    iter_aligned_contiguous_edges,
    iter_aligned_contiguous_uvs,
)
from maya_zen_tools.loft import (
    loft_distribute_uvs_between_edges_or_uvs,
    loft_distribute_vertices_between_edges,
)


def test_iter_contiguous_edges_poly_sphere(poly_sphere: str) -> None:
    """
    This tests `maya_zen_tools.loft._iter_contiguous_edges` with a known
    set of edge loops forming 3 contiguous segments by verifying the number
    of groupings.
    """
    assert poly_sphere == "polySphere"
    assert (
        len(
            tuple(
                iter_aligned_contiguous_edges(
                    "polySphere.e[293]",
                    "polySphere.e[294]",
                    "polySphere.e[295]",
                    "polySphere.e[296]",
                    "polySphere.e[297]",
                    "polySphere.e[298]",
                    "polySphere.e[299]",
                    "polySphere.e[153]",
                    "polySphere.e[154]",
                    "polySphere.e[155]",
                    "polySphere.e[156]",
                    "polySphere.e[157]",
                    "polySphere.e[158]",
                    "polySphere.e[159]",
                    "polySphere.e[93]",
                    "polySphere.e[94]",
                    "polySphere.e[95]",
                    "polySphere.e[96]",
                    "polySphere.e[97]",
                    "polySphere.e[98]",
                    "polySphere.e[99]",
                )
            )
        )
        == 3
    )


def test_loft_distribute_vertices_between_edges_poly_sphere_lattitude(
    poly_sphere: str,
) -> None:
    """
    This tests `maya_zen_tools.loft.loft_distribute_vertices_between_edges` by
    verifying affected faces/vertices.
    """
    assert poly_sphere == "polySphere"
    vertices_positions: dict[int, tuple[float, float, float]] = (
        get_polymesh_shape_vertices_positions("polySphere")
    )
    cmds.select(
        "polySphere.e[293]",
        "polySphere.e[294]",
        "polySphere.e[295]",
        "polySphere.e[296]",
        "polySphere.e[297]",
        "polySphere.e[298]",
        "polySphere.e[299]",
        "polySphere.e[153]",
        "polySphere.e[154]",
        "polySphere.e[155]",
        "polySphere.e[156]",
        "polySphere.e[157]",
        "polySphere.e[158]",
        "polySphere.e[159]",
        "polySphere.e[93]",
        "polySphere.e[94]",
        "polySphere.e[95]",
        "polySphere.e[96]",
        "polySphere.e[97]",
        "polySphere.e[98]",
        "polySphere.e[99]",
    )
    loft_distribute_vertices_between_edges()
    changed_vertices_positions: dict[int, tuple[float, float, float]] = (
        get_polymesh_shape_changed_vertices_positions(
            "polySphere", vertices_positions
        )
    )
    assert set(changed_vertices_positions.keys()) == {
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        133,
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        173,
        174,
        175,
        176,
        177,
        178,
        179,
        180,
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200,
        213,
        214,
        215,
        216,
        217,
        218,
        219,
        220,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        253,
        254,
        255,
        256,
        257,
        258,
        259,
        260,
        273,
        274,
        275,
        276,
        277,
        278,
        279,
    }


def test_loft_distribute_vertices_between_edges_poly_sphere_longitude(
    poly_sphere: str,
) -> None:
    """
    This tests `maya_zen_tools.loft.loft_distribute_vertices_between_edges` by
    verifying affected faces/vertices.
    """
    assert poly_sphere == "polySphere"
    vertices_positions: dict[int, tuple[float, float, float]] = (
        get_polymesh_shape_vertices_positions("polySphere")
    )
    cmds.select(
        "polySphere.e[480]",
        "polySphere.e[500]",
        "polySphere.e[520]",
        "polySphere.e[540]",
        "polySphere.e[560]",
        "polySphere.e[580]",
        "polySphere.e[600]",
        "polySphere.e[620]",
        "polySphere.e[640]",
        "polySphere.e[660]",
        "polySphere.e[680]",
        "polySphere.e[497]",
        "polySphere.e[517]",
        "polySphere.e[537]",
        "polySphere.e[557]",
        "polySphere.e[577]",
        "polySphere.e[597]",
        "polySphere.e[617]",
        "polySphere.e[637]",
        "polySphere.e[657]",
        "polySphere.e[677]",
        "polySphere.e[697]",
        "polySphere.e[493]",
        "polySphere.e[513]",
        "polySphere.e[533]",
        "polySphere.e[553]",
        "polySphere.e[573]",
        "polySphere.e[593]",
        "polySphere.e[613]",
        "polySphere.e[633]",
        "polySphere.e[653]",
        "polySphere.e[673]",
        "polySphere.e[693]",
    )
    assert set(loft_distribute_vertices_between_edges()) == {
        "polySphere.f[113]",
        "polySphere.f[114]",
        "polySphere.f[115]",
        "polySphere.f[116]",
        "polySphere.f[117]",
        "polySphere.f[118]",
        "polySphere.f[119]",
        "polySphere.f[133]",
        "polySphere.f[134]",
        "polySphere.f[135]",
        "polySphere.f[136]",
        "polySphere.f[137]",
        "polySphere.f[138]",
        "polySphere.f[139]",
        "polySphere.f[153]",
        "polySphere.f[154]",
        "polySphere.f[155]",
        "polySphere.f[156]",
        "polySphere.f[157]",
        "polySphere.f[158]",
        "polySphere.f[159]",
        "polySphere.f[173]",
        "polySphere.f[174]",
        "polySphere.f[175]",
        "polySphere.f[176]",
        "polySphere.f[177]",
        "polySphere.f[178]",
        "polySphere.f[179]",
        "polySphere.f[193]",
        "polySphere.f[194]",
        "polySphere.f[195]",
        "polySphere.f[196]",
        "polySphere.f[197]",
        "polySphere.f[198]",
        "polySphere.f[199]",
        "polySphere.f[213]",
        "polySphere.f[214]",
        "polySphere.f[215]",
        "polySphere.f[216]",
        "polySphere.f[217]",
        "polySphere.f[218]",
        "polySphere.f[219]",
        "polySphere.f[233]",
        "polySphere.f[234]",
        "polySphere.f[235]",
        "polySphere.f[236]",
        "polySphere.f[237]",
        "polySphere.f[238]",
        "polySphere.f[239]",
        "polySphere.f[253]",
        "polySphere.f[254]",
        "polySphere.f[255]",
        "polySphere.f[256]",
        "polySphere.f[257]",
        "polySphere.f[258]",
        "polySphere.f[259]",
        "polySphere.f[273]",
        "polySphere.f[274]",
        "polySphere.f[275]",
        "polySphere.f[276]",
        "polySphere.f[277]",
        "polySphere.f[278]",
        "polySphere.f[279]",
        "polySphere.f[293]",
        "polySphere.f[294]",
        "polySphere.f[295]",
        "polySphere.f[296]",
        "polySphere.f[297]",
        "polySphere.f[298]",
        "polySphere.f[299]",
        "polySphere.f[313]",
        "polySphere.f[314]",
        "polySphere.f[315]",
        "polySphere.f[316]",
        "polySphere.f[317]",
        "polySphere.f[318]",
        "polySphere.f[319]",
    }
    changed_vertices_positions: dict[int, tuple[float, float, float]] = (
        get_polymesh_shape_changed_vertices_positions(
            "polySphere", vertices_positions
        )
    )
    assert set(changed_vertices_positions.keys()) == {
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        174,
        175,
        176,
        177,
        178,
        179,
        180,
        194,
        195,
        196,
        197,
        198,
        199,
        200,
        214,
        215,
        216,
        217,
        218,
        219,
        220,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        254,
        255,
        256,
        257,
        258,
        259,
        260,
        274,
        275,
        276,
        277,
        278,
        279,
        280,
        294,
        295,
        296,
        297,
        298,
        299,
        300,
        314,
        315,
        316,
        317,
        318,
        319,
        334,
        335,
        336,
        337,
        338,
        339,
    }


def test_loft_distribute_uvs_between_edges_or_uvs_poly_sphere(
    poly_sphere: str,
) -> None:
    """
    This tests `maya_zen_tools.loft.loft_distribute_uvs_between_edges_or_uvs`
    by verifying affected UVs.
    """
    assert poly_sphere == "polySphere"
    uvs_positions: dict[int, tuple[float, float]] = (
        get_polymesh_shape_uvs_positions("polySphere")
    )
    cmds.polyEditUV(
        "polySphere.map[378:398]",
        "polySphere.map[419:438]",
        uValue=0.0,
        vValue=-0.5,
        relative=True,
    )
    cmds.select(
        "polySphere.map[126]",
        "polySphere.map[127]",
        "polySphere.map[128]",
        "polySphere.map[129]",
        "polySphere.map[130]",
        "polySphere.map[131]",
        "polySphere.map[132]",
        "polySphere.map[133]",
        "polySphere.map[134]",
        "polySphere.map[135]",
        "polySphere.map[136]",
        "polySphere.map[137]",
        "polySphere.map[138]",
        "polySphere.map[139]",
        "polySphere.map[140]",
        "polySphere.map[141]",
        "polySphere.map[142]",
        "polySphere.map[143]",
        "polySphere.map[144]",
        "polySphere.map[145]",
        "polySphere.map[146]",
        "polySphere.map[378]",
        "polySphere.map[379]",
        "polySphere.map[380]",
        "polySphere.map[381]",
        "polySphere.map[382]",
        "polySphere.map[383]",
        "polySphere.map[384]",
        "polySphere.map[385]",
        "polySphere.map[386]",
        "polySphere.map[387]",
        "polySphere.map[388]",
        "polySphere.map[389]",
        "polySphere.map[390]",
        "polySphere.map[391]",
        "polySphere.map[392]",
        "polySphere.map[393]",
        "polySphere.map[394]",
        "polySphere.map[395]",
        "polySphere.map[396]",
        "polySphere.map[397]",
        "polySphere.map[398]",
    )
    assert set(loft_distribute_uvs_between_edges_or_uvs()) == {
        "polySphere.f[151]",
        "polySphere.f[234]",
        "polySphere.f[240]",
        "polySphere.f[238]",
        "polySphere.f[146]",
        "polySphere.f[155]",
        "polySphere.f[190]",
        "polySphere.f[266]",
        "polySphere.f[236]",
        "polySphere.f[263]",
        "polySphere.f[282]",
        "polySphere.f[260]",
        "polySphere.f[333]",
        "polySphere.f[233]",
        "polySphere.f[254]",
        "polySphere.f[343]",
        "polySphere.f[268]",
        "polySphere.f[137]",
        "polySphere.f[250]",
        "polySphere.f[226]",
        "polySphere.f[138]",
        "polySphere.f[205]",
        "polySphere.f[358]",
        "polySphere.f[229]",
        "polySphere.f[152]",
        "polySphere.f[313]",
        "polySphere.f[125]",
        "polySphere.f[294]",
        "polySphere.f[273]",
        "polySphere.f[354]",
        "polySphere.f[321]",
        "polySphere.f[181]",
        "polySphere.f[202]",
        "polySphere.f[316]",
        "polySphere.f[130]",
        "polySphere.f[244]",
        "polySphere.f[159]",
        "polySphere.f[144]",
        "polySphere.f[341]",
        "polySphere.f[157]",
        "polySphere.f[207]",
        "polySphere.f[311]",
        "polySphere.f[166]",
        "polySphere.f[131]",
        "polySphere.f[158]",
        "polySphere.f[183]",
        "polySphere.f[323]",
        "polySphere.f[167]",
        "polySphere.f[200]",
        "polySphere.f[177]",
        "polySphere.f[335]",
        "polySphere.f[267]",
        "polySphere.f[320]",
        "polySphere.f[139]",
        "polySphere.f[347]",
        "polySphere.f[295]",
        "polySphere.f[322]",
        "polySphere.f[161]",
        "polySphere.f[160]",
        "polySphere.f[277]",
        "polySphere.f[196]",
        "polySphere.f[209]",
        "polySphere.f[217]",
        "polySphere.f[237]",
        "polySphere.f[255]",
        "polySphere.f[357]",
        "polySphere.f[187]",
        "polySphere.f[140]",
        "polySphere.f[352]",
        "polySphere.f[189]",
        "polySphere.f[283]",
        "polySphere.f[319]",
        "polySphere.f[253]",
        "polySphere.f[338]",
        "polySphere.f[220]",
        "polySphere.f[252]",
        "polySphere.f[280]",
        "polySphere.f[215]",
        "polySphere.f[298]",
        "polySphere.f[246]",
        "polySphere.f[265]",
        "polySphere.f[270]",
        "polySphere.f[156]",
        "polySphere.f[199]",
        "polySphere.f[133]",
        "polySphere.f[327]",
        "polySphere.f[163]",
        "polySphere.f[127]",
        "polySphere.f[174]",
        "polySphere.f[281]",
        "polySphere.f[286]",
        "polySphere.f[344]",
        "polySphere.f[124]",
        "polySphere.f[318]",
        "polySphere.f[214]",
        "polySphere.f[342]",
        "polySphere.f[355]",
        "polySphere.f[278]",
        "polySphere.f[232]",
        "polySphere.f[223]",
        "polySphere.f[132]",
        "polySphere.f[245]",
        "polySphere.f[148]",
        "polySphere.f[249]",
        "polySphere.f[225]",
        "polySphere.f[340]",
        "polySphere.f[326]",
        "polySphere.f[239]",
        "polySphere.f[304]",
        "polySphere.f[243]",
        "polySphere.f[317]",
        "polySphere.f[182]",
        "polySphere.f[305]",
        "polySphere.f[203]",
        "polySphere.f[126]",
        "polySphere.f[359]",
        "polySphere.f[222]",
        "polySphere.f[169]",
        "polySphere.f[168]",
        "polySphere.f[129]",
        "polySphere.f[272]",
        "polySphere.f[261]",
        "polySphere.f[314]",
        "polySphere.f[173]",
        "polySphere.f[180]",
        "polySphere.f[309]",
        "polySphere.f[351]",
        "polySphere.f[292]",
        "polySphere.f[134]",
        "polySphere.f[170]",
        "polySphere.f[192]",
        "polySphere.f[289]",
        "polySphere.f[211]",
        "polySphere.f[136]",
        "polySphere.f[315]",
        "polySphere.f[312]",
        "polySphere.f[122]",
        "polySphere.f[191]",
        "polySphere.f[197]",
        "polySphere.f[221]",
        "polySphere.f[259]",
        "polySphere.f[269]",
        "polySphere.f[135]",
        "polySphere.f[123]",
        "polySphere.f[206]",
        "polySphere.f[242]",
        "polySphere.f[296]",
        "polySphere.f[154]",
        "polySphere.f[172]",
        "polySphere.f[149]",
        "polySphere.f[307]",
        "polySphere.f[201]",
        "polySphere.f[308]",
        "polySphere.f[324]",
        "polySphere.f[328]",
        "polySphere.f[198]",
        "polySphere.f[219]",
        "polySphere.f[310]",
        "polySphere.f[299]",
        "polySphere.f[195]",
        "polySphere.f[251]",
        "polySphere.f[258]",
        "polySphere.f[171]",
        "polySphere.f[337]",
        "polySphere.f[145]",
        "polySphere.f[350]",
        "polySphere.f[178]",
        "polySphere.f[235]",
        "polySphere.f[150]",
        "polySphere.f[257]",
        "polySphere.f[143]",
        "polySphere.f[276]",
        "polySphere.f[349]",
        "polySphere.f[231]",
        "polySphere.f[297]",
        "polySphere.f[241]",
        "polySphere.f[262]",
        "polySphere.f[194]",
        "polySphere.f[300]",
        "polySphere.f[120]",
        "polySphere.f[165]",
        "polySphere.f[153]",
        "polySphere.f[302]",
        "polySphere.f[224]",
        "polySphere.f[228]",
        "polySphere.f[345]",
        "polySphere.f[218]",
        "polySphere.f[230]",
        "polySphere.f[264]",
        "polySphere.f[301]",
        "polySphere.f[329]",
        "polySphere.f[128]",
        "polySphere.f[293]",
        "polySphere.f[248]",
        "polySphere.f[334]",
        "polySphere.f[216]",
        "polySphere.f[285]",
        "polySphere.f[332]",
        "polySphere.f[353]",
        "polySphere.f[185]",
        "polySphere.f[330]",
        "polySphere.f[210]",
        "polySphere.f[275]",
        "polySphere.f[212]",
        "polySphere.f[141]",
        "polySphere.f[179]",
        "polySphere.f[279]",
        "polySphere.f[288]",
        "polySphere.f[274]",
        "polySphere.f[291]",
        "polySphere.f[336]",
        "polySphere.f[346]",
        "polySphere.f[348]",
        "polySphere.f[247]",
        "polySphere.f[306]",
        "polySphere.f[303]",
        "polySphere.f[339]",
        "polySphere.f[193]",
        "polySphere.f[256]",
        "polySphere.f[271]",
        "polySphere.f[284]",
        "polySphere.f[186]",
        "polySphere.f[184]",
        "polySphere.f[175]",
        "polySphere.f[188]",
        "polySphere.f[290]",
        "polySphere.f[325]",
        "polySphere.f[121]",
        "polySphere.f[331]",
        "polySphere.f[356]",
        "polySphere.f[227]",
        "polySphere.f[162]",
        "polySphere.f[204]",
        "polySphere.f[287]",
        "polySphere.f[213]",
        "polySphere.f[164]",
        "polySphere.f[208]",
        "polySphere.f[147]",
        "polySphere.f[142]",
        "polySphere.f[176]",
    }
    changed_uvs_positions: dict[int, tuple[float, float]] = (
        get_polymesh_shape_changed_uvs_positions("polySphere", uvs_positions)
    )
    assert set(changed_uvs_positions.keys()) == {
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159,
        160,
        161,
        162,
        163,
        164,
        165,
        166,
        167,
        168,
        169,
        170,
        171,
        172,
        173,
        174,
        175,
        176,
        177,
        178,
        179,
        180,
        181,
        182,
        183,
        184,
        185,
        186,
        187,
        188,
        189,
        190,
        191,
        192,
        193,
        194,
        195,
        196,
        197,
        198,
        199,
        200,
        201,
        202,
        203,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        212,
        213,
        214,
        215,
        216,
        217,
        218,
        219,
        220,
        221,
        222,
        223,
        224,
        225,
        226,
        227,
        228,
        229,
        230,
        231,
        232,
        233,
        234,
        235,
        236,
        237,
        238,
        239,
        240,
        241,
        242,
        243,
        244,
        245,
        246,
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        254,
        255,
        256,
        257,
        258,
        259,
        260,
        261,
        262,
        263,
        264,
        265,
        266,
        267,
        268,
        269,
        270,
        271,
        272,
        273,
        274,
        275,
        276,
        277,
        278,
        279,
        280,
        281,
        282,
        283,
        284,
        285,
        286,
        287,
        288,
        289,
        290,
        291,
        292,
        293,
        294,
        295,
        296,
        297,
        298,
        299,
        300,
        301,
        302,
        303,
        304,
        305,
        306,
        307,
        308,
        309,
        310,
        311,
        312,
        313,
        314,
        315,
        316,
        317,
        318,
        319,
        320,
        321,
        322,
        323,
        324,
        325,
        326,
        327,
        328,
        329,
        330,
        331,
        332,
        333,
        334,
        335,
        336,
        337,
        338,
        339,
        340,
        341,
        342,
        343,
        344,
        345,
        346,
        347,
        348,
        349,
        350,
        351,
        352,
        353,
        354,
        355,
        356,
        357,
        358,
        359,
        360,
        361,
        362,
        363,
        364,
        365,
        366,
        367,
        368,
        369,
        370,
        371,
        372,
        373,
        374,
        375,
        376,
        377,
        378,
        379,
        380,
        381,
        382,
        383,
        384,
        385,
        386,
        387,
        388,
        389,
        390,
        391,
        392,
        393,
        394,
        395,
        396,
        397,
        398,
        419,
        420,
        421,
        422,
        423,
        424,
        425,
        426,
        427,
        428,
        429,
        430,
        431,
        432,
        433,
        434,
        435,
        436,
        437,
        438,
    }


def test_iter_aligned_contiguous_edges_poly_plane(poly_plane: str) -> None:
    """
    Test re-alignment of edge loop segments which are imperfectly aligned
    """
    assert poly_plane == "polyPlane"
    assert set(
        chain(
            *iter_aligned_contiguous_edges(
                "polyPlane.e[81]",
                "polyPlane.e[102]",
                "polyPlane.e[123]",
                "polyPlane.e[144]",
                "polyPlane.e[165]",
                "polyPlane.e[47]",
                "polyPlane.e[68]",
                "polyPlane.e[89]",
                "polyPlane.e[110]",
                "polyPlane.e[131]",
                "polyPlane.e[152]",
                "polyPlane.e[53]",
                "polyPlane.e[74]",
                "polyPlane.e[95]",
                "polyPlane.e[116]",
                "polyPlane.e[137]",
                "polyPlane.e[158]",
                "polyPlane.e[179]",
            )
        )
    ) == {
        "polyPlane.e[81]",
        "polyPlane.e[89]",
        "polyPlane.e[95]",
        "polyPlane.e[102]",
        "polyPlane.e[110]",
        "polyPlane.e[116]",
        "polyPlane.e[123]",
        "polyPlane.e[131]",
        "polyPlane.e[137]",
        "polyPlane.e[144]",
        "polyPlane.e[152]",
        "polyPlane.e[158]",
    }


def test_iter_aligned_contiguous_uvs_poly_plane(poly_plane: str) -> None:
    """
    Test re-alignment of UV loop segments which are imperfectly aligned
    """
    assert poly_plane == "polyPlane"
    assert set(
        chain(
            *iter_aligned_contiguous_uvs(
                "polyPlane.map[22]",
                "polyPlane.map[25]",
                "polyPlane.map[33]",
                "polyPlane.map[36]",
                "polyPlane.map[39]",
                "polyPlane.map[44]",
                "polyPlane.map[47]",
                "polyPlane.map[50]",
                "polyPlane.map[55]",
                "polyPlane.map[58]",
                "polyPlane.map[61]",
                "polyPlane.map[66]",
                "polyPlane.map[69]",
                "polyPlane.map[72]",
                "polyPlane.map[77]",
                "polyPlane.map[80]",
                "polyPlane.map[83]",
                "polyPlane.map[88]",
                "polyPlane.map[91]",
                "polyPlane.map[94]",
                "polyPlane.map[99]",
                "polyPlane.map[105]",
                "polyPlane.map[110]",
                "polyPlane.map[116]",
            )
        )
    ) == {
        "polyPlane.map[33]",
        "polyPlane.map[36]",
        "polyPlane.map[39]",
        "polyPlane.map[44]",
        "polyPlane.map[47]",
        "polyPlane.map[50]",
        "polyPlane.map[55]",
        "polyPlane.map[58]",
        "polyPlane.map[61]",
        "polyPlane.map[66]",
        "polyPlane.map[69]",
        "polyPlane.map[72]",
        "polyPlane.map[77]",
        "polyPlane.map[80]",
        "polyPlane.map[83]",
        "polyPlane.map[88]",
        "polyPlane.map[91]",
        "polyPlane.map[94]",
    }


if __name__ == "__main__":
    pytest.main(["-s", "-vv", __file__])
